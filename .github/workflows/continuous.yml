name: Build

on:
  push:
    branches:
      - master
      - stable
  pull_request:
    branches:
      - master
      - stable

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  CTEST_PARALLEL_LEVEL: 2

jobs:
  ####################
  # Linux / macOS
  ####################

  Unix:
    name: ${{ matrix.name }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-latest]
        config: [Debug, Release]
        include:
          - os: macos-latest
            name: macOS
          - os: ubuntu-18.04
            name: Linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 10

      - name: Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
            sudo apt-get install \
            libblas-dev \
            libboost-filesystem-dev \
            libboost-system-dev \
            libboost-thread-dev \
            libglu1-mesa-dev \
            libsuitesparse-dev \
            xorg-dev \
            ccache

      - name: Dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install suite-sparse ccache

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v1
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=1.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DPOLYFEM_WITH_MISC=ON

      - name: Build
        run: cd build; make -j2; ccache --show-stats

      - name: Tests
        run: cd build; ctest --verbose --output-on-failure

  ####################
  # Windows
  ####################

  Windows:
    runs-on: windows-2019
    env:
      CC: cl.exe
      CXX: cl.exe
      SCCACHE_IDLE_TIMEOUT: "1200"
    strategy:
      fail-fast: false
      matrix:
        config: [Release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 10
      - uses: seanmiddleditch/gha-setup-ninja@master

        # https://github.com/actions/cache/issues/101
      - name: Set env
        run: |
          echo "::set-env name=appdata::$($env:LOCALAPPDATA)"

      - name: Cache build
        id: cache-build
        uses: actions/cache@v1
        with:
          path: ${{ env.appdata }}\Mozilla\sccache
          key: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare sccache
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install sccache --global
          # Scoop modifies the PATH so we make the modified PATH global.
          echo "::set-env name=PATH::$env:PATH"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Configure
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DPOLYFEM_WITH_MISC=ON -G "Visual Studio 16 2019" ../


      - name: Buid
        shell: cmd
        run: |
          cd build
          set MSBuildOptions=/v:m /p:Configuration=${{ matrix.config }} /p:PreferredToolArchitecture=x64
          msbuild %MSBuildOptions% PolyFEM.sln

      - name: Tests
        run: |
          cd build
          ls
          ls tests
          ls tests/unit_tests.dir